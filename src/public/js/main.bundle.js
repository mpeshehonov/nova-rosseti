/*! For license information please see main.bundle.js.LICENSE.txt */
(self.webpackChunknova_rosseti=self.webpackChunknova_rosseti||[]).push([["main"],{"./src/js/app.js":(e,a,t)=>{"use strict";t.r(a);var o=t("./src/js/data/config.js"),n=t("./node_modules/three/build/three.module.js"),r=t("./node_modules/three/examples/jsm/math/Octree.js"),d=t("./node_modules/three/examples/jsm/math/Capsule.js"),i=t("./node_modules/three/examples/jsm/controls/PointerLockControls.js"),c=t("./node_modules/three/examples/jsm/controls/TransformControls.js"),s=t("./node_modules/three/examples/jsm/loaders/GLTFLoader.js");t("./src/css/app.scss");console.log("----- RUNNING IN DEV ENVIRONMENT! -----"),o.default.isDev=!0;var l,m,h,u,y,p=new n.Clock,w=new r.Octree,v=new d.Capsule(new n.Vector3(0,.35,0),new n.Vector3(0,1,0),.35),f=new n.Vector3,b=new n.Vector3,g=!1,M=!1,S=(performance.now(),[]),k=new n.Raycaster,L=new n.Vector2,C=[],P=null,j=!1,I=!1;!function(){var e=new n.Scene,a=new n.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,2e5);a.position.set(-14,8,16),a.rotation.order="YXZ";var t=new i.PointerLockControls(a,document.body);l=new n.Raycaster(new n.Vector3,new n.Vector3(0,-1,0),0,10),m=new n.Raycaster(new n.Vector3,new n.Vector3(0,-1,0),0,50);var o=document.getElementById("blocker"),r=new n.WebGLRenderer({antialias:!0});r.setPixelRatio(window.devicePixelRatio),r.setSize(window.innerWidth,window.innerHeight),r.shadowMap.enabled=!0,r.shadowMap.type=n.VSMShadowMap,r.physicallyCorrectLights=!0,r.outputEncoding=n.sRGBEncoding;var d=document.createElement("div");document.body.appendChild(d),d.appendChild(r.domElement),window.addEventListener("resize",(function(){a.aspect=window.innerWidth/window.innerHeight,a.updateProjectionMatrix(),r.setSize(window.innerWidth,window.innerHeight)}),!1),instructions.addEventListener("click",(function(){t.lock()})),t.addEventListener("lock",(function(){instructions.style.display="none",o.style.display="none"})),t.addEventListener("unlock",(function(){o.style.display="block",instructions.style.display=""})),e.add(t.getObject()),document.addEventListener("click",(function(){var e=ye[pe];a.getWorldDirection(b),e.collider.center.copy(v.end),e.velocity.copy(b).multiplyScalar(180),pe=(pe+1)%ye.length}),!1);var E=new n.LineBasicMaterial({color:11206570}),x=.0025,V=.0025,K=new n.Geometry;K.vertices.push(new n.Vector3(0,V,0)),K.vertices.push(new n.Vector3(0,-V,0)),K.vertices.push(new n.Vector3(0,0,0)),K.vertices.push(new n.Vector3(x,0,0)),K.vertices.push(new n.Vector3(-x,0,0));var _=new n.Line(K,E);_.position.x=0*a.aspect,_.position.y=0,_.position.z=-.3,a.add(_);var z=new n.DirectionalLight("#FFFFFF",.001);z.position.set(-5,25,-1),z.castShadow=!0,z.shadow.camera.near=.01,z.shadow.camera.far=500,z.shadow.camera.right=30,z.shadow.camera.left=-30,z.shadow.camera.top=30,z.shadow.camera.bottom=-30,z.shadow.mapSize.width=1024,z.shadow.mapSize.height=1024,z.shadow.radius=4,z.shadow.bias=-6e-5,e.add(z);var F=new n.HemisphereLight(16777215,16777215,.86);F.color.setHSL(.6,1,.6),F.groundColor.setHSL(.095,1,.75),F.position.set(0,50,0),e.add(F),e.fog=new n.Fog(16777215,100,700);e.fog.near=20;e.fog.far=600;var G=document.getElementById("vertexShader").textContent,D=document.getElementById("fragmentShader").textContent,X={topColor:{value:new n.Color(30719)},bottomColor:{value:new n.Color(16777215)},offset:{value:2},exponent:{value:.6}};X.topColor.value.copy(F.color);var A=new n.SphereGeometry(4e3,32,15),R=new n.ShaderMaterial({uniforms:X,vertexShader:G,fragmentShader:D,side:n.BackSide}),W=new n.Mesh(A,R);e.add(W),(u=new n.Group).name="projectors",e.add(u);var B=new n.BoxBufferGeometry(2,1,2),N=new n.Mesh(B,new n.MeshLambertMaterial({color:"#69f"}));N.position.set(-45,0,0),N.castShadow=!0,e.add(N),u.add(N);var Y,O,T=new n.BoxBufferGeometry(2,1,2),H=new n.Mesh(T,new n.MeshLambertMaterial({color:"#69f"}));H.position.set(-50,0,0),H.castShadow=!0,e.add(H),u.add(H),(Y=new n.Mesh(new n.CylinderGeometry(.2,.2,.4,20),new n.MeshPhongMaterial({color:"#330099"}))).rotateX(Math.PI/2),(O=new n.SpotLight(16777215,.5,150)).power=100.5,O.angle=.5,O.decay=2,O.penumbra=.1,O.distance=200,O.rotateX(Math.PI/2),O.shadow.camera.near=.01,O.shadow.camera.far=500,O.shadow.camera.right=30,O.shadow.camera.left=-30,O.shadow.camera.top=30,O.shadow.camera.bottom=-30,O.shadow.mapSize.width=1024,O.shadow.mapSize.height=1024,Y.add(O),Y.add(O.target),Y.position.set(0,2,0),Y.rotation.set(0,2,0),e.add(Y),u.add(Y),Y.castShadow=!0;var q=new n.BoxBufferGeometry(3,.3,3),U=new n.Mesh(q,new n.MeshLambertMaterial({color:"#f00"}));function Z(){l.ray.origin.copy(t.getObject().position),l.ray.origin.y>.1||l.ray.origin.y,l.ray.origin.x,l.ray.origin.z;for(var e=l.intersectObjects(S),a=e.length>0,o=0;o<e.length;o++){e[o].point.x;var n=e[o].point.y;e[o].point.z;!0===a&&n>0||!0===a&&n<0?(U.material.color.set("#FF33FF"),U.scale.set(.2,.2,.2),U.rotation.set(30,0,0)):U.material.color.set("#f00")}}e.add(U),U.position.set(75,0,18),U.castShadow=!0,S.push(U);function Q(o){1==o?(e.remove(h),e.remove(t),me(),s(!1),m=new n.Raycaster(new n.Vector3,new n.Vector3(0,-1,0),0,0),(t=new i.PointerLockControls(a,document.body)).enableRotate=!0):2==o&&(e.remove(h),e.remove(t),me(),s(!0),m=new n.Raycaster(new n.Vector3,new n.Vector3(0,-1,0),0,50),h=new c.TransformControls(a,document.body,r.domElement),e.add(h),t.enableRotate=!0,document.addEventListener("keydown",(function(e){switch(e.keyCode){case 84:h.setMode("translate");break;case 85:h.setMode("rotate");break;case 89:h.setMode("scale");break;case 73:h.enabled=!h.enabled}})));var d=new n.Vector2;function s(e){1==e?document.addEventListener("pointermove",(function(e){P&&(P.parent.name="projectors",h.attach(P),P=null);m.setFromCamera(d,a);var t=m.intersectObject(u,!0);if(t.length>0){var o=t.filter((function(e){return e&&e.object}))[0];o&&o.object&&(P=o.object).material.color.set("#FF33FF")}})):0==e&&document.addEventListener("pointermove",(function(){P&&(P.parent.name="projectors",h.attach(P),P=null);var e=m.intersectObject(u,!0);if(e.length>0){var a=e.filter((function(e){return e&&e.object}))[0];a&&a.object&&(P=a.object).material.color.set("#330099")}}))}}function J(){return a.getWorldDirection(b),b.y=0,b.normalize(),b}function $(){return a.getWorldDirection(b),b.y=0,b.normalize(),b.cross(a.up),b}document.addEventListener("keydown",(function(e){switch(e.keyCode){case 49:Q(1);break;case 50:Q(2)}}),!1);var ee={};document.addEventListener("keydown",(function(e){ee[e.code]=!0}),!1),document.addEventListener("keyup",(function(e){ee[e.code]=!1,f.z=0,f.y=0,f.x=0}),!1);document.addEventListener("keydown",(function(e){switch(e.keyCode){case 17:v.radius=.15}}),!1),document.addEventListener("keyup",(function(e){switch(e.keyCode){case 17:v.radius=.85}}),!1);document.addEventListener("keydown",(function(e){switch(e.keyCode){case 16:M=!0}}),!1),document.addEventListener("keyup",(function(e){switch(e.keyCode){case 16:M=!1}}),!1);function ae(){f.set(0,0,0)}document.addEventListener("keydown",(function(e){switch(e.keyCode){case 70:requestAnimationFrame(ae)}}),!1);document.addEventListener("keydown",(function(e){switch(e.keyCode){case 69:j=!0}}),!1),document.addEventListener("keyup",(function(e){switch(e.keyCode){case 69:j=!1,a.rotation.z=2*Math.PI}}),!1);document.addEventListener("keydown",(function(e){switch(e.keyCode){case 81:I=!0}}),!1),document.addEventListener("keyup",(function(e){switch(e.keyCode){case 81:I=!1,a.rotation.z=2*Math.PI}}),!1);var te=new n.Mesh(new n.PlaneBufferGeometry(2e3,2e3),new n.MeshPhongMaterial({color:9735549,depthWrite:!1}));te.receiveShadow=!0,te.rotation.x=-Math.PI/2,te.castShadow=!0,te.position.set(0,-.1,0),e.add(te),w.fromGraphNode(te);var oe=new n.GridHelper(2e3,30,0,0);oe.material.opacity=.2,oe.material.transparent=!0,oe.position.set(0,-.1,0),e.add(oe),(ce=new s.GLTFLoader).load("./3d/models/avia_scene/location/3one02.glb",(function(a){e.add(a.scene),w.fromGraphNode(a.scene),a.scene.castShadow=!0})),ce.load("./3d/models/avia_scene/location/3one03.glb",(function(a){e.add(a.scene),w.fromGraphNode(a.scene),a.scene.castShadow=!0})),ce.load("./3d/models/avia_scene/location/3one04.glb",(function(a){e.add(a.scene),w.fromGraphNode(a.scene),a.scene.castShadow=!0})),ce.load("./3d/models/avia_scene/location/3one06.glb",(function(a){e.add(a.scene),w.fromGraphNode(a.scene),a.scene.castShadow=!0})),ce.load("./3d/models/avia_scene/location/3one07.glb",(function(a){e.add(a.scene),w.fromGraphNode(a.scene),a.scene.castShadow=!0}));document.addEventListener("keydown",(function(e){switch(e.keyCode){case 56:a.children[1].visible=!1,a.children[2].visible=!0;break;case 57:a.children[1].visible=!0,a.children[2].visible=!1}}),!1);var ne=new s.GLTFLoader;k.setFromCamera(L,a);var re=k.ray.direction.x,de=k.ray.direction.y,ie=k.ray.direction.z;ne.load("./3d/models/avia_scene/drons/avia1bi.glb",(function(t){e.add(t.scene),t.scene.scale.set(.1,.1,.1),t.scene.position.set(0,0,0),t.scene.castShadow=!0;var o=t.scene;a.add(o),o.castShadow=!0,o.position.set(re+0,de-.45,ie-.005),o.visible=!1})),ne.load("./3d/models/avia_scene/drons/dron1bi.glb",(function(t){e.add(t.scene),t.scene.scale.set(.1,.1,.1),t.scene.position.set(0,0,0),t.scene.castShadow=!0;var o=t.scene;a.add(o),o.castShadow=!0,o.position.set(re+0,de-.65,ie-.002)}));var ce=new s.GLTFLoader;(y=new n.Group).name="remoteDetails",e.add(y),ce.load("./3d/models/avia_scene/remote/up2.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)})),ce.load("./3d/models/avia_scene/remote/down2.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)})),ce.load("./3d/models/avia_scene/remote/left2.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)})),ce.load("./3d/models/avia_scene/remote/right2.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)})),ce.load("./3d/models/avia_scene/remote/carcas.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)})),ce.load("./3d/models/avia_scene/remote/leftstick.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)})),ce.load("./3d/models/avia_scene/remote/rightstick.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)})),ce.load("./3d/models/avia_scene/remote/up1.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)})),ce.load("./3d/models/avia_scene/remote/down1.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)})),ce.load("./3d/models/avia_scene/remote/left1.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)})),ce.load("./3d/models/avia_scene/remote/right1.glb",(function(t){var o=t.scene;t.scene.scale.set(.5,.5,.5),e.add(o),y.add(o),a.add(o),o.rotateX(Math.PI/2),o.rotateY(Math.PI/2),o.position.set(re-.85,de-.52,ie-2e-4)}));document.addEventListener("keydown",(function(e){switch(e.keyCode){case 87:t=new n.MeshLambertMaterial({color:"#f00"}),a.children[2].children[0].material=t;break;case 83:!function(){var e=new n.MeshLambertMaterial({color:"#f00"});a.children[3].children[0].material=e}();break;case 65:!function(){var e=new n.MeshLambertMaterial({color:"#f00"});a.children[4].children[0].material=e}();break;case 68:!function(){var e=new n.MeshLambertMaterial({color:"#f00"});a.children[5].children[0].material=e}();break;case 32:!function(){var e=new n.MeshLambertMaterial({color:"#f00"});a.children[9].children[0].material=e}();break;case 67:case 88:se();break;case 69:!function(){var e=new n.MeshLambertMaterial({color:"#f00"});a.children[11].children[0].material=e}();break;case 81:!function(){var e=new n.MeshLambertMaterial({color:"#f00"});a.children[12].children[0].material=e}()}var t}),!1);function se(){var e=new n.MeshLambertMaterial({color:"#f00"});a.children[10].children[0].material=e}function le(){var e=new n.MeshLambertMaterial({color:"grey"});a.children[10].children[0].material=e}function me(){e.remove(h),e.remove(t.scene),e.remove(undefined),e.remove(t)}document.addEventListener("keyup",(function(e){switch(e.keyCode){case 87:t=new n.MeshLambertMaterial({color:"grey"}),a.children[2].children[0].material=t;break;case 83:!function(){var e=new n.MeshLambertMaterial({color:"grey"});a.children[3].children[0].material=e}();break;case 65:!function(){var e=new n.MeshLambertMaterial({color:"grey"});a.children[4].children[0].material=e}();break;case 68:!function(){var e=new n.MeshLambertMaterial({color:"grey"});a.children[5].children[0].material=e}();break;case 32:!function(){var e=new n.MeshLambertMaterial({color:"grey"});a.children[9].children[0].material=e}();break;case 67:case 88:le();break;case 69:!function(){var e=new n.MeshLambertMaterial({color:"grey"});a.children[11].children[0].material=e}();break;case 81:!function(){var e=new n.MeshLambertMaterial({color:"grey"});a.children[12].children[0].material=e}()}var t}),!1);for(var he=new n.SphereBufferGeometry(.2,32,32),ue=new n.MeshStandardMaterial({color:288948,roughness:.8,metalness:.5}),ye=[],pe=0,we=0;we<20;we++){var ve=new n.Mesh(he,ue);ve.castShadow=!0,ve.receiveShadow=!0,e.add(ve),ye.push({mesh:ve,collider:new n.Sphere(new n.Vector3(0,-100,0),.2),velocity:new n.Vector3})}function fe(e){g?f.addScaledVector(f,-.4):f.y-=30*e;var t,o=f.clone().multiplyScalar(e);v.translate(o),t=w.capsuleIntersect(v),g=!1,t&&((g=t.normal.y>0)||f.addScaledVector(t.normal,-t.normal.dot(f)),v.translate(t.normal.multiplyScalar(t.depth))),a.position.copy(v.end)}function be(e){ye.forEach((function(a){a.collider.center.addScaledVector(a.velocity,e);var t=w.sphereIntersect(a.collider);t?(a.velocity.addScaledVector(t.normal,1.5*-t.normal.dot(a.velocity)),a.collider.center.add(t.normal.multiplyScalar(t.depth))):a.velocity.y-=30*e;var o=Math.exp(-1.5*e)-1;a.velocity.addScaledVector(a.velocity,o),function(){for(var e=0;e<ye.length;e++)for(var a=ye[e],t=e+1;t<ye.length;t++){var o=ye[t],n=a.collider.center.distanceToSquared(o.collider.center),r=a.collider.radius+o.collider.radius;if(n<r*r){var d=a.collider.clone().center.sub(o.collider.center).normalize(),i=d.clone().multiplyScalar(d.dot(a.velocity)),c=d.clone().multiplyScalar(d.dot(o.velocity));a.velocity.add(c).sub(i),o.velocity.add(i).sub(c);var s=(r-Math.sqrt(n))/2;a.collider.center.addScaledVector(d,s),o.collider.center.addScaledVector(d,-s)}}}(),a.mesh.position.copy(a.collider.center)}))}!function t(){var o=Math.min(.1,p.getDelta());fe(o),be(o),r.render(e,a),requestAnimationFrame(t),function(e){var a=285;1==g&&(ee.KeyW&&f.add(J().multiplyScalar(a*e)),ee.KeyS&&f.add(J().multiplyScalar(-285*e)),ee.KeyA&&f.add($().multiplyScalar(-285*e)),ee.KeyD&&f.add($().multiplyScalar(a*e)),ee.Space&&(f.y=15),ee.KeyX&&(f.y-=35),ee.KeyC&&(f.y-=35))}(o),function(e){0==g&&(ee.KeyW&&f.add(J().multiplyScalar(65*e)),ee.KeyS&&f.add(J().multiplyScalar(-65*e)),ee.KeyA&&f.add($().multiplyScalar(-65*e)),ee.KeyD&&f.add($().multiplyScalar(65*e)),ee.Space&&(f.y=15),ee.KeyX&&(f.y=-35),ee.KeyC&&(f.y=-35))}(o),function(e){1==j&&(a.rotation.z+=Math.PI/40,ee.KeyW&&f.add(J().multiplyScalar(65*e)),ee.KeyS&&f.add(J().multiplyScalar(-65*e)),ee.KeyA&&f.add($().multiplyScalar(-65*e)),ee.KeyD&&f.add($().multiplyScalar(65*e)))}(o),function(e){1==I&&(a.rotation.z-=Math.PI/40,ee.KeyW&&f.add(J().multiplyScalar(65*e)),ee.KeyS&&f.add(J().multiplyScalar(-65*e)),ee.KeyA&&f.add($().multiplyScalar(-65*e)),ee.KeyD&&f.add($().multiplyScalar(65*e)))}(o),requestAnimationFrame(Z),function(e){var a=385;1==M&&1==g&&(ee.KeyW&&f.add(J().multiplyScalar(a*e)),ee.KeyS&&f.add(J().multiplyScalar(-385*e)),ee.KeyA&&f.add($().multiplyScalar(-385*e)),ee.KeyD&&f.add($().multiplyScalar(a*e)),ee.Space&&(f.y=35),ee.KeyX&&(f.y=-35),ee.KeyC&&(f.y=-35))}(o),function(e){var a=165;1==M&&0==g&&(ee.KeyW&&f.add(J().multiplyScalar(a*e)),ee.KeyS&&f.add(J().multiplyScalar(-165*e)),ee.KeyA&&f.add($().multiplyScalar(-165*e)),ee.KeyD&&f.add($().multiplyScalar(a*e)),ee.Space&&(f.y=35),ee.KeyX&&(f.y=-35),ee.KeyC&&(f.y=-35))}(o);for(var n=p.getDelta(),d=0;d<C.length;d++)C[d].update(n)}()}()},"./src/js/data/config.js":(e,a,t)=>{"use strict";t.r(a),t.d(a,{default:()=>o});const o={isDev:!1,isShowingStats:!0,isLoaded:!1,isTweening:!1,isRotating:!0,isMouseMoving:!1,isMouseOver:!1,maxAnisotropy:1,dpr:1,easing:t("./node_modules/@tweenjs/tween.js/dist/tween.esm.js").default.Easing.Quadratic.InOut,duration:500,model:{selected:0,initialTypes:["gltf","object"],type:"gltf"},models:[{path:"./assets/models/duck.gltf",scale:20,type:"gltf"},{path:"./assets/models/Teapot.json",scale:20,type:"object"}],texture:{path:"./assets/textures/",imageFiles:[{name:"UV",image:"UV_Grid_Sm.jpg"}]},mesh:{enableHelper:!0,wireframe:!1,translucent:!1,material:{color:16777215,emissive:16777215}},fog:{color:16777215,near:8e-4},camera:{fov:40,near:2,far:1e3,aspect:1,posX:0,posY:30,posZ:40},controls:{autoRotate:!0,autoRotateSpeed:-.5,rotateSpeed:.5,zoomSpeed:.8,minDistance:200,maxDistance:600,minPolarAngle:Math.PI/5,maxPolarAngle:Math.PI/2,minAzimuthAngle:-1/0,maxAzimuthAngle:1/0,enableDamping:!0,dampingFactor:.5,enableZoom:!0,target:{x:0,y:0,z:0}},ambientLight:{enabled:!0,color:1315860},directionalLight:{enabled:!0,color:15790320,intensity:.4,x:-75,y:280,z:150},shadow:{enabled:!0,helperEnabled:!0,bias:0,mapWidth:2048,mapHeight:2048,near:250,far:400,top:100,right:100,bottom:-100,left:-100},pointLight:{enabled:!0,color:16777215,intensity:.34,distance:115,x:0,y:0,z:0},hemiLight:{enabled:!0,color:13158600,groundColor:16777215,intensity:.55,x:0,y:0,z:0}}},"./src/css/app.scss":(e,a,t)=>{"use strict";t.r(a)}},e=>{"use strict";e.O(0,["vendors"],(()=>{return a="./src/js/app.js",e(e.s=a);var a}));e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,